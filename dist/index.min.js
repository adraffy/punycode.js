function r(r){return r<26?97+r:22+r}function e(r){if(r<=90){if(r>=65)return r-65;if(r>=48&&r<=57)return r-22}else if(r>=97&&r<=122)return r-97;throw new Error(`not alphanumeric ASCII: 0x${r.toString(16)}`)}function t(r,e){let t=r-e;return t<=0?1:t>=26?26:t}function n(r,e,t){r=Math.floor(r/(t?700:2)),r+=Math.floor(r/e);let n=0;for(;r>455;)r=Math.floor(r/35),n+=36;return n+Math.floor(36*r/(r+38))}function i(r){return[...r].map((r=>r.codePointAt(0)))}function o(r){if("string"==typeof r){let e=i(r),t=u(e,!0);return e===t?r:String.fromCharCode(...t)}return String.fromCharCode(...f(r,!0))}function f(r,e){if(!Array.isArray(r)||!r.every((r=>Number.isSafeInteger(r)&&r>=0&&r<=1114111)))throw new TypeError("expected array of Unicode codepoints");return u(r,e)}function u(e,i){let o=e.filter((r=>r<128)),f=o.length;if(f==e.length)return e;i&&o.splice(0,0,120,110,45,45),f&&o.push(45);let u=128,l=72,a=0,c=f;for(;c<e.length;){let i=e.reduce(((r,e)=>e>=u&&e<r?e:r),1114111);a+=(i-u)*(c+1);for(let u of e)if(u<i)a++;else if(u==i){let e=a;for(let n=36;;n+=36){let i=t(n,l),f=e-i;if(f<0)break;let u=36-i;o.push(r(i+f%u)),e=Math.floor(f/u)}o.push(r(e)),l=n(a,c+1,c==f),a=0,c++}a++,u=i+1}return o}function l(r){return r.length>=4&&(120==r[0]||88==r[0])&&(110==r[1]||78==r[1])&&45==r[2]&&45==r[3]}function a(r){if("string"==typeof r){let e=i(r);if(e.every((r=>r<128)))return l(e)?s(e.slice(4)):r}else if(ArrayBuffer.isView(r)){if(r.every((r=>r>=0&&r<128)))return l(r)?s(r.subarray(4)):String.fromCharCode(...r)}else if(Array.isArray(r)&&r.every((r=>Number.isSafeInteger(r)&&r>=0&&r<=128)))return l(r)?s(r.slice(4)):String.fromCharCode(...r);throw new TypeError("expected ASCII")}function c(r){if(ArrayBuffer.isView(r)){if(r.every((r=>r>=0&&r<128)))return h(r)}else if(Array.isArray(r)&&r.every((r=>Number.isSafeInteger(r)&&r>=0&&r<=128)))return h(r);throw new TypeError("expected array of ASCII codepoints")}function s(r){return String.fromCodePoint(...h(r))}function h(r){let i=r.lastIndexOf(45)+1,o=Math.max(0,i-1),f=ArrayBuffer.isView(r)?[...r.subarray(0,o)]:r.slice(0,o),u=0,l=128,a=72;for(;i<r.length;){let o=u,c=1,s=36;for(;;){let n=e(r[i++]);u+=n*c;let o=t(s,a);if(n<o)break;if(i>=r.length)throw new Error("invalid encoding");c*=36-o,s+=36}let h=f.length+1;if(a=n(u-o,h,0==o),l+=Math.floor(u/h),l>1114111)throw new Error("invalid encoding");u%=h,f.splice(u++,0,l)}return f}export{c as puny_decode,a as puny_decoded,f as puny_encode,o as puny_encoded};
